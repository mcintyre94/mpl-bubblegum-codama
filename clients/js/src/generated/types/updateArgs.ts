/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  none,
  transformEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getCreatorDecoder,
  getCreatorEncoder,
  type Creator,
  type CreatorArgs,
} from '.';

export type UpdateArgs = {
  name: Option<string>;
  symbol: Option<string>;
  uri: Option<string>;
  creators: Option<Array<Creator>>;
  sellerFeeBasisPoints: Option<number>;
  primarySaleHappened: Option<boolean>;
  isMutable: Option<boolean>;
};

export type UpdateArgsArgs = {
  name?: OptionOrNullable<string>;
  symbol?: OptionOrNullable<string>;
  uri?: OptionOrNullable<string>;
  creators?: OptionOrNullable<Array<CreatorArgs>>;
  sellerFeeBasisPoints?: OptionOrNullable<number>;
  primarySaleHappened?: OptionOrNullable<boolean>;
  isMutable?: OptionOrNullable<boolean>;
};

export function getUpdateArgsEncoder(): Encoder<UpdateArgsArgs> {
  return transformEncoder(
    getStructEncoder([
      [
        'name',
        getOptionEncoder(
          addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())
        ),
      ],
      [
        'symbol',
        getOptionEncoder(
          addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())
        ),
      ],
      [
        'uri',
        getOptionEncoder(
          addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())
        ),
      ],
      ['creators', getOptionEncoder(getArrayEncoder(getCreatorEncoder()))],
      ['sellerFeeBasisPoints', getOptionEncoder(getU16Encoder())],
      ['primarySaleHappened', getOptionEncoder(getBooleanEncoder())],
      ['isMutable', getOptionEncoder(getBooleanEncoder())],
    ]),
    (value) => ({
      ...value,
      name: value.name ?? none(),
      symbol: value.symbol ?? none(),
      uri: value.uri ?? none(),
      creators: value.creators ?? none(),
      sellerFeeBasisPoints: value.sellerFeeBasisPoints ?? none(),
      primarySaleHappened: value.primarySaleHappened ?? none(),
      isMutable: value.isMutable ?? none(),
    })
  );
}

export function getUpdateArgsDecoder(): Decoder<UpdateArgs> {
  return getStructDecoder([
    [
      'name',
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
    [
      'symbol',
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
    [
      'uri',
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
    ['creators', getOptionDecoder(getArrayDecoder(getCreatorDecoder()))],
    ['sellerFeeBasisPoints', getOptionDecoder(getU16Decoder())],
    ['primarySaleHappened', getOptionDecoder(getBooleanDecoder())],
    ['isMutable', getOptionDecoder(getBooleanDecoder())],
  ]);
}

export function getUpdateArgsCodec(): Codec<UpdateArgsArgs, UpdateArgs> {
  return combineCodec(getUpdateArgsEncoder(), getUpdateArgsDecoder());
}
