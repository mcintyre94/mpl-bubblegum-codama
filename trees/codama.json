{
  "kind": "rootNode",
  "standard": "codama",
  "version": "1.3.2",
  "program": {
    "kind": "programNode",
    "name": "mplBubblegum",
    "publicKey": "BGUMAp9Gq7iTEuizy4pqaxsTyUCBK68MDfK752saRPUY",
    "version": "0.12.0",
    "origin": "anchor",
    "docs": [],
    "accounts": [
      {
        "kind": "accountNode",
        "name": "treeConfig",
        "size": 96,
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "discriminator",
              "defaultValueStrategy": "omitted",
              "docs": [],
              "type": {
                "kind": "fixedSizeTypeNode",
                "size": 8,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "defaultValue": {
                "kind": "bytesValueNode",
                "data": "7af5aff8ab2200cf",
                "encoding": "base16"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "treeCreator",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "treeDelegate",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "totalMintCapacity",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "numMinted",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "isPublic",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "isDecompressible",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "decompressibleState"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "version",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "version"
              }
            }
          ]
        },
        "pda": {
          "kind": "pdaLinkNode",
          "name": "treeConfig"
        },
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "accountNode",
        "name": "voucher",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "discriminator",
              "defaultValueStrategy": "omitted",
              "docs": [],
              "type": {
                "kind": "fixedSizeTypeNode",
                "size": 8,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "defaultValue": {
                "kind": "bytesValueNode",
                "data": "bfcc95ead5a50d41",
                "encoding": "base16"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "leafSchema",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "leafSchema"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "index",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u32",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "merkleTree",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            }
          ]
        },
        "pda": {
          "kind": "pdaLinkNode",
          "name": "voucher"
        },
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      }
    ],
    "instructions": [
      {
        "kind": "instructionNode",
        "name": "burn",
        "docs": [
          "Burns a leaf node from the tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "746e1d386bdb2a5d",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "burnV2",
        "docs": [
          "Burns a `LeafSchema` V2 leaf node from the tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional authority, defaults to `payer`.  Must be either",
              "the leaf owner or collection collection permanent burn delegate."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mplCoreCpiSigner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mplCoreProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d",
              "identifier": "mplCore"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "73d222f0e88fb710",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "cancelRedeem",
        "docs": [
          "Cancels a redeem."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "voucher",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "6f4ce83227af30f2",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "collectV2",
        "docs": [
          "Collect fees from a V2 tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "destination",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "150b9f2f04c36a38",
              "encoding": "base16"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "compress",
        "docs": [
          "Compresses a metadata account."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenMetadataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s",
              "identifier": "mplTokenMetadata"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "52c1b075b01573fd",
              "encoding": "base16"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "createTree",
        "docs": [
          "Creates a new tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeCreator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "a553888e59ca2fdc",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "maxDepth",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "maxBufferSize",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "public",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "createTreeV2",
        "docs": [
          "Creates a new tree for use with `LeafSchema` V2 leaf nodes.  See `mint_v2` for more details",
          "on the new functionality."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeCreator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional tree creator, defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "37635fd78ecbe3cd",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "maxDepth",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "maxBufferSize",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "public",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "decompressV1",
        "docs": [
          "Decompresses a leaf node from the tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "voucher",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mintAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarRent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenMetadataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s",
              "identifier": "mplTokenMetadata"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "associatedTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "36554c46e4faa451",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "metadata",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "delegate",
        "docs": [
          "Sets a delegate for a leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "previousLeafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "newLeafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "5a934bb255580489",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "delegateAndFreezeV2",
        "docs": [
          "Delegates and freezes a `LeafSchema` V2 leaf node, preventing transferring or burning."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional leaf owner, defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "previousLeafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newLeafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "11e523dabef1fa7b",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "collectionHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "delegateV2",
        "docs": [
          "Sets a delegate for a `LeafSchema` V2 leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional leaf owner, defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "previousLeafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newLeafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "5f577d8cb58380e3",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "collectionHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "freezeV2",
        "docs": [
          "Freezes a `LeafSchema` V2 leaf node, preventing transferring or burning."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional authority, defaults to `payer`.  Must be either",
              "the leaf delegate or collection permanent freeze delegate."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "c897f46610c3ff03",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "mintToCollectionV1",
        "docs": [
          "Mints a new asset and adds it to a Token Metadata collection."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeDelegate",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecordPda",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "If there is no collecton authority record PDA then",
              "this must be the Bubblegum program address."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "bubblegumSigner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenMetadataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s",
              "identifier": "mplTokenMetadata"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "9912b22fc59e560f",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "metadataArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "mintV1",
        "docs": [
          "Mints a new asset."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeDelegate",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "9162c076b8937668",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "mintV2",
        "docs": [
          "Mints a new asset using `LeafSchema` V2 and optionally adds it to an MPL Core collection.",
          "Requires a tree created with `createTreeV2`.",
          "",
          "'LeafSchema' V2 enables new functionality:",
          "1. Uses MPL Core collections instead of Token Metadata collections.",
          "2. Uses the streamlined `MetadataV2` arguments, which eliminate the collection verified",
          "flag.  In `MetadataV2`, any collection included is automatically considered verified.",
          "3. Allows for use of plugins such as Royalties, Permanent Burn Delegate, etc. on the",
          "MPL Core collection to authorize operations on the Bubblegum asset.  Note the",
          "`BubblegumV2` plugin must also be present on the MPL Core collection for it to be",
          "used for Bubblegum.  See MPL Core `BubblegumV2` plugin for list of compatible",
          "collection-level plugins.",
          "4. Allows for freezing/thawing of the asset, as well as setting an asset to be",
          "permanently non-transferable (soulbound).  Non-transferable is similar to freezing",
          "but allows the owner to burn the asset, while freezing does not.",
          "5. Not available yet, but optionally specify data (and a schema) to be associated with",
          "the asset."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeDelegate",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional tree delegate, defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional collection authority, defaults to `tree_delegate`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mplCoreCpiSigner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mplCoreProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d",
              "identifier": "mplCore"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "78791792ad6ec7cd",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "metadataArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgsV2"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetData",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "bytesTypeNode"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataSchema",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "definedTypeLinkNode",
                "name": "assetDataSchema"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "redeem",
        "docs": [
          "Redeems a vouches.",
          "",
          "Once a vouch is redeemed, the corresponding leaf node is removed from the tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "voucher",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "b80c569546c461e1",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setAndVerifyCollection",
        "docs": [
          "Sets and verifies a collection to a leaf node"
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "This account is checked to be a signer in",
              "the case of `set_and_verify_collection` where",
              "we are actually changing the NFT metadata."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecordPda",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "If there is no collecton authority record PDA then",
              "this must be the Bubblegum program address."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "bubblegumSigner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenMetadataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s",
              "identifier": "mplTokenMetadata"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "ebf279d89eeab4ea",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "collection",
            "docs": [],
            "type": {
              "kind": "publicKeyTypeNode"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setCollectionV2",
        "docs": [
          "Sets and collection to a `LeafSchema` V2 leaf node"
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "If item is not in a collection, then authority must be tree owner/delegate.  If item is",
              "getting removed from a collection, then this must be an authority for the existing",
              "collection.  Defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newCollectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "If item is getting added to a new collection, then this must be the authority",
              "for the new collection.  Defaults to `authority`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "newCoreCollection",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mplCoreCpiSigner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "mplCoreProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d",
              "identifier": "mplCore"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "e5233d5b0f0e63a0",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgsV2"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setDecompressableState",
        "docs": [
          "Sets the `decompressible_state` of a tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeCreator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "1287eea8f6c33d73",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "decompressableState",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "decompressibleState"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setDecompressibleState",
        "docs": [
          "Sets the `decompressible_state` of a tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeCreator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "52689806956f640d",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "decompressableState",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "decompressibleState"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setNonTransferableV2",
        "docs": [
          "Permanently sets the non-transferable flag on a `LeafSchema` V2 leaf node,",
          "making it soulbound."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "This authority must be a permanent freeze delegate on the collection",
              "Defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "b58dce3af2c798a8",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setTreeDelegate",
        "docs": [
          "Sets a delegate for a tree."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeCreator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "newTreeDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "fd764225be319a66",
              "encoding": "base16"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "thawAndRevokeV2",
        "docs": [
          "Thaws a previously frozen `LeafSchema` V2 leaf node, and revoke the leaf delegate."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional leaf delegate, defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "56d6be25a7041c74",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "collectionHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "thawV2",
        "docs": [
          "Thaws a previously frozen `LeafSchema` V2 leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional authority, defaults to `payer`.  Must be either",
              "the leaf delegate or collection permanent freeze delegate."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "6085655d52dc92bf",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "transfer",
        "docs": [
          "Transfers a leaf node from one account to another."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "newLeafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "a334c8e78c0345ba",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "transferV2",
        "docs": [
          "Transfers a `LeafSchema` V2 leaf node from one account to another."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional authority, defaults to `payer`.  Must be either",
              "the leaf owner or collection permanent transfer delegate."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newLeafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "772806ebeaddf831",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "unverifyCollection",
        "docs": [
          "Unverifies a collection from a leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "This account is checked to be a signer in",
              "the case of `set_and_verify_collection` where",
              "we are actually changing the NFT metadata."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecordPda",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "If there is no collecton authority record PDA then",
              "this must be the Bubblegum program address."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "bubblegumSigner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenMetadataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s",
              "identifier": "mplTokenMetadata"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "fafb2a6a2989baa8",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "unverifyCreator",
        "docs": [
          "Unverifies a creator from a leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "creator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "6bb2392769737098",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "unverifyCreatorV2",
        "docs": [
          "Unverifies a creator from a `LeafSchema` V2 leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "creator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional creator, defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "ae701d8ee664ef07",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgsV2"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "updateAssetDataV2",
        "docs": [
          "Updates asset data for a `LeafSchema` V2 leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Either collection authority or tree owner/delegate, depending on",
              "whether the item is in a verified collection.  Defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "3b386f2b5f0e0b3d",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "previousAssetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "newAssetData",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "bytesTypeNode"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "newAssetDataSchema",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "definedTypeLinkNode",
                "name": "assetDataSchema"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "updateMetadata",
        "docs": [
          "Updates metadata for a leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Either collection authority or tree owner/delegate, depending",
              "on whether the item is in a verified collection"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Used when item is in a verified collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Used when item is in a verified collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecordPda",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenMetadataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s",
              "identifier": "mplTokenMetadata"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "aab62bef614ee1ba",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "currentMetadata",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "updateArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "updateArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "updateMetadataV2",
        "docs": [
          "Updates metadata for a `LeafSchema` V2 leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Either collection authority or tree owner/delegate, depending",
              "on whether the item is in a verified collection.  Defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "coreCollection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "2b67592a79f23e48",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "currentMetadata",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgsV2"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "updateArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "updateArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "verifyCollection",
        "docs": [
          "Verifies a collection for a leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "treeDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "This account is checked to be a signer in",
              "the case of `set_and_verify_collection` where",
              "we are actually changing the NFT metadata."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecordPda",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "If there is no collecton authority record PDA then",
              "this must be the Bubblegum program address."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "bubblegumSigner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenMetadataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s",
              "identifier": "mplTokenMetadata"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "387165fd4f377aa9",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "verifyCreator",
        "docs": [
          "Verifies a creator for a leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "creator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "34116084470455c2",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "dataHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "creatorHash",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "verifyCreatorV2",
        "docs": [
          "Verifies a creator for a `LeafSchema` V2 leaf node."
        ],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "treeAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "creator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Optional creator, defaults to `payer`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "leafDelegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Defaults to `leaf_owner`"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "merkleTree",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "logWrapper",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "compressionProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": []
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 8,
              "type": {
                "kind": "bytesTypeNode"
              }
            },
            "defaultValue": {
              "kind": "bytesValueNode",
              "data": "558a8c2a16f17666",
              "encoding": "base16"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "root",
            "docs": [],
            "type": {
              "kind": "fixedSizeTypeNode",
              "size": 32,
              "type": {
                "kind": "bytesTypeNode"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "assetDataHash",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "fixedSizeTypeNode",
                "size": 32,
                "type": {
                  "kind": "bytesTypeNode"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "flags",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "index",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u32",
              "endian": "le"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "message",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "metadataArgsV2"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      }
    ],
    "definedTypes": [
      {
        "kind": "definedTypeNode",
        "name": "creator",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "address",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "verified",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "share",
              "docs": [
                "The percentage share.",
                "",
                "The value is a percentage, not basis points."
              ],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "uses",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "useMethod",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "useMethod"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "remaining",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "total",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "collection",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "verified",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "metadataArgs",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "name",
              "docs": [
                "The name of the asset"
              ],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "symbol",
              "docs": [
                "The symbol for the asset"
              ],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uri",
              "docs": [
                "URI pointing to JSON representing the asset"
              ],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "sellerFeeBasisPoints",
              "docs": [
                "Royalty basis points that goes to creators in secondary sales (0-10000)"
              ],
              "type": {
                "kind": "numberTypeNode",
                "format": "u16",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "primarySaleHappened",
              "docs": [
                "Immutable, once flipped, all sales of this metadata are considered secondary."
              ],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "isMutable",
              "docs": [
                "Whether or not the data struct is mutable, default is not"
              ],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "editionNonce",
              "docs": [
                "nonce for easy calculation of editions, if present"
              ],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "tokenStandard",
              "docs": [
                "Token standard.  Currently only `NonFungible` is allowed."
              ],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "tokenStandard"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "collection",
              "docs": [
                "Collection"
              ],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "collection"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uses",
              "docs": [
                "Uses"
              ],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "uses"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "tokenProgramVersion",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "tokenProgramVersion"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "creators",
              "docs": [],
              "type": {
                "kind": "arrayTypeNode",
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "creator"
                },
                "count": {
                  "kind": "prefixedCountNode",
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "metadataArgsV2",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "name",
              "docs": [
                "The name of the asset"
              ],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "symbol",
              "docs": [
                "The symbol for the asset"
              ],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uri",
              "docs": [
                "URI pointing to JSON representing the asset"
              ],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "sellerFeeBasisPoints",
              "docs": [
                "Royalty basis points that goes to creators in secondary sales (0-10000)"
              ],
              "type": {
                "kind": "numberTypeNode",
                "format": "u16",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "primarySaleHappened",
              "docs": [
                "Immutable, once flipped, all sales of this metadata are considered secondary."
              ],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "isMutable",
              "docs": [
                "Whether or not the data struct is mutable, default is not"
              ],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "tokenStandard",
              "docs": [
                "Token standard.  Currently only `NonFungible` is allowed."
              ],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "tokenStandard"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "creators",
              "docs": [
                "Creator array"
              ],
              "type": {
                "kind": "arrayTypeNode",
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "creator"
                },
                "count": {
                  "kind": "prefixedCountNode",
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "collection",
              "docs": [
                "Collection.  Note in V2 its just a `Pubkey` and is always considered verified."
              ],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "publicKeyTypeNode"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "updateArgs",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "name",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "sizePrefixTypeNode",
                  "type": {
                    "kind": "stringTypeNode",
                    "encoding": "utf8"
                  },
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "symbol",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "sizePrefixTypeNode",
                  "type": {
                    "kind": "stringTypeNode",
                    "encoding": "utf8"
                  },
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uri",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "sizePrefixTypeNode",
                  "type": {
                    "kind": "stringTypeNode",
                    "encoding": "utf8"
                  },
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "creators",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "arrayTypeNode",
                  "item": {
                    "kind": "definedTypeLinkNode",
                    "name": "creator"
                  },
                  "count": {
                    "kind": "prefixedCountNode",
                    "prefix": {
                      "kind": "numberTypeNode",
                      "format": "u32",
                      "endian": "le"
                    }
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "sellerFeeBasisPoints",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u16",
                  "endian": "le"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "primarySaleHappened",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "booleanTypeNode",
                  "size": {
                    "kind": "numberTypeNode",
                    "format": "u8",
                    "endian": "le"
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "isMutable",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "booleanTypeNode",
                  "size": {
                    "kind": "numberTypeNode",
                    "format": "u8",
                    "endian": "le"
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "version",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "v1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "v2"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "leafSchema",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "id",
                    "docs": [],
                    "type": {
                      "kind": "publicKeyTypeNode"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "owner",
                    "docs": [],
                    "type": {
                      "kind": "publicKeyTypeNode"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "delegate",
                    "docs": [],
                    "type": {
                      "kind": "publicKeyTypeNode"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "nonce",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "dataHash",
                    "docs": [],
                    "type": {
                      "kind": "fixedSizeTypeNode",
                      "size": 32,
                      "type": {
                        "kind": "bytesTypeNode"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "creatorHash",
                    "docs": [],
                    "type": {
                      "kind": "fixedSizeTypeNode",
                      "size": 32,
                      "type": {
                        "kind": "bytesTypeNode"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "id",
                    "docs": [],
                    "type": {
                      "kind": "publicKeyTypeNode"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "owner",
                    "docs": [],
                    "type": {
                      "kind": "publicKeyTypeNode"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "delegate",
                    "docs": [],
                    "type": {
                      "kind": "publicKeyTypeNode"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "nonce",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "dataHash",
                    "docs": [],
                    "type": {
                      "kind": "fixedSizeTypeNode",
                      "size": 32,
                      "type": {
                        "kind": "bytesTypeNode"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "creatorHash",
                    "docs": [],
                    "type": {
                      "kind": "fixedSizeTypeNode",
                      "size": 32,
                      "type": {
                        "kind": "bytesTypeNode"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "collectionHash",
                    "docs": [],
                    "type": {
                      "kind": "fixedSizeTypeNode",
                      "size": 32,
                      "type": {
                        "kind": "bytesTypeNode"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "assetDataHash",
                    "docs": [],
                    "type": {
                      "kind": "fixedSizeTypeNode",
                      "size": 32,
                      "type": {
                        "kind": "bytesTypeNode"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "flags",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u8",
                      "endian": "le"
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "tokenProgramVersion",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "original"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "token2022"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "tokenStandard",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "nonFungible"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "fungibleAsset"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "fungible"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "nonFungibleEdition"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "useMethod",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "burn"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "multiple"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "single"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "bubblegumEventType",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "uninitialized"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "leafSchemaEvent"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "decompressibleState",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "enabled"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "disabled"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "assetDataSchema",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "binary"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "json"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "msgPack"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "instructionName",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "unknown"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "mintV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "redeem"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "cancelRedeem"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "transfer"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "delegate"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "decompressV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "compress"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "burn"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "createTree"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "verifyCreator"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "unverifyCreator"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "verifyCollection"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "unverifyCollection"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "setAndVerifyCollection"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "mintToCollectionV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "setDecompressibleState"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "updateMetadata"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "burnV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "collectV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "createTreeV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "delegateAndFreezeV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "delegateV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "freezeV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "mintV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "setCollectionV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "setNonTransferableV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "thawAndRevokeV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "thawV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "transferV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "unverifyCreatorV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "updateAssetDataV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "updateMetadataV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "verifyCreatorV2"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      }
    ],
    "pdas": [
      {
        "kind": "pdaNode",
        "name": "treeConfig",
        "docs": [],
        "seeds": [
          {
            "kind": "variablePdaSeedNode",
            "name": "merkleTree",
            "docs": [],
            "type": {
              "kind": "publicKeyTypeNode"
            }
          }
        ]
      },
      {
        "kind": "pdaNode",
        "name": "voucher",
        "docs": [],
        "seeds": [
          {
            "kind": "constantPdaSeedNode",
            "type": {
              "kind": "stringTypeNode",
              "encoding": "utf8"
            },
            "value": {
              "kind": "stringValueNode",
              "string": "voucher"
            }
          },
          {
            "kind": "variablePdaSeedNode",
            "name": "merkleTree",
            "docs": [],
            "type": {
              "kind": "publicKeyTypeNode"
            }
          },
          {
            "kind": "variablePdaSeedNode",
            "name": "nonce",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          }
        ]
      }
    ],
    "errors": [
      {
        "kind": "errorNode",
        "name": "assetOwnerMismatch",
        "code": 6000,
        "message": "Asset Owner Does not match",
        "docs": [
          "AssetOwnerMismatch: Asset Owner Does not match"
        ]
      },
      {
        "kind": "errorNode",
        "name": "publicKeyMismatch",
        "code": 6001,
        "message": "PublicKeyMismatch",
        "docs": [
          "PublicKeyMismatch: PublicKeyMismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "hashingMismatch",
        "code": 6002,
        "message": "Hashing Mismatch Within Leaf Schema",
        "docs": [
          "HashingMismatch: Hashing Mismatch Within Leaf Schema"
        ]
      },
      {
        "kind": "errorNode",
        "name": "unsupportedSchemaVersion",
        "code": 6003,
        "message": "Unsupported Schema Version",
        "docs": [
          "UnsupportedSchemaVersion: Unsupported Schema Version"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorShareTotalMustBe100",
        "code": 6004,
        "message": "Creator shares must sum to 100",
        "docs": [
          "CreatorShareTotalMustBe100: Creator shares must sum to 100"
        ]
      },
      {
        "kind": "errorNode",
        "name": "duplicateCreatorAddress",
        "code": 6005,
        "message": "No duplicate creator addresses in metadata",
        "docs": [
          "DuplicateCreatorAddress: No duplicate creator addresses in metadata"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorDidNotVerify",
        "code": 6006,
        "message": "Creator did not verify the metadata",
        "docs": [
          "CreatorDidNotVerify: Creator did not verify the metadata"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorNotFound",
        "code": 6007,
        "message": "Creator not found in creator Vec",
        "docs": [
          "CreatorNotFound: Creator not found in creator Vec"
        ]
      },
      {
        "kind": "errorNode",
        "name": "noCreatorsPresent",
        "code": 6008,
        "message": "No creators in creator Vec",
        "docs": [
          "NoCreatorsPresent: No creators in creator Vec"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorHashMismatch",
        "code": 6009,
        "message": "User-provided creator Vec must result in same user-provided creator hash",
        "docs": [
          "CreatorHashMismatch: User-provided creator Vec must result in same user-provided creator hash"
        ]
      },
      {
        "kind": "errorNode",
        "name": "dataHashMismatch",
        "code": 6010,
        "message": "User-provided metadata must result in same user-provided data hash",
        "docs": [
          "DataHashMismatch: User-provided metadata must result in same user-provided data hash"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorsTooLong",
        "code": 6011,
        "message": "Creators list too long",
        "docs": [
          "CreatorsTooLong: Creators list too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "metadataNameTooLong",
        "code": 6012,
        "message": "Name in metadata is too long",
        "docs": [
          "MetadataNameTooLong: Name in metadata is too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "metadataSymbolTooLong",
        "code": 6013,
        "message": "Symbol in metadata is too long",
        "docs": [
          "MetadataSymbolTooLong: Symbol in metadata is too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "metadataUriTooLong",
        "code": 6014,
        "message": "Uri in metadata is too long",
        "docs": [
          "MetadataUriTooLong: Uri in metadata is too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "metadataBasisPointsTooHigh",
        "code": 6015,
        "message": "Basis points in metadata cannot exceed 10000",
        "docs": [
          "MetadataBasisPointsTooHigh: Basis points in metadata cannot exceed 10000"
        ]
      },
      {
        "kind": "errorNode",
        "name": "treeAuthorityIncorrect",
        "code": 6016,
        "message": "Tree creator or tree delegate must sign.",
        "docs": [
          "TreeAuthorityIncorrect: Tree creator or tree delegate must sign."
        ]
      },
      {
        "kind": "errorNode",
        "name": "insufficientMintCapacity",
        "code": 6017,
        "message": "Not enough unapproved mints left",
        "docs": [
          "InsufficientMintCapacity: Not enough unapproved mints left"
        ]
      },
      {
        "kind": "errorNode",
        "name": "numericalOverflowError",
        "code": 6018,
        "message": "NumericalOverflowError",
        "docs": [
          "NumericalOverflowError: NumericalOverflowError"
        ]
      },
      {
        "kind": "errorNode",
        "name": "incorrectOwner",
        "code": 6019,
        "message": "Incorrect account owner",
        "docs": [
          "IncorrectOwner: Incorrect account owner"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionCannotBeVerifiedInThisInstruction",
        "code": 6020,
        "message": "Cannot Verify Collection in this Instruction",
        "docs": [
          "CollectionCannotBeVerifiedInThisInstruction: Cannot Verify Collection in this Instruction"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionNotFound",
        "code": 6021,
        "message": "Collection Not Found on Metadata",
        "docs": [
          "CollectionNotFound: Collection Not Found on Metadata"
        ]
      },
      {
        "kind": "errorNode",
        "name": "alreadyVerified",
        "code": 6022,
        "message": "Collection item is already verified.",
        "docs": [
          "AlreadyVerified: Collection item is already verified."
        ]
      },
      {
        "kind": "errorNode",
        "name": "alreadyUnverified",
        "code": 6023,
        "message": "Collection item is already unverified.",
        "docs": [
          "AlreadyUnverified: Collection item is already unverified."
        ]
      },
      {
        "kind": "errorNode",
        "name": "updateAuthorityIncorrect",
        "code": 6024,
        "message": "Incorrect leaf metadata update authority.",
        "docs": [
          "UpdateAuthorityIncorrect: Incorrect leaf metadata update authority."
        ]
      },
      {
        "kind": "errorNode",
        "name": "leafAuthorityMustSign",
        "code": 6025,
        "message": "This transaction must be signed by either the leaf owner or leaf delegate",
        "docs": [
          "LeafAuthorityMustSign: This transaction must be signed by either the leaf owner or leaf delegate"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionMustBeSized",
        "code": 6026,
        "message": "Collection Not Compatable with Compression, Must be Sized",
        "docs": [
          "CollectionMustBeSized: Collection Not Compatable with Compression, Must be Sized"
        ]
      },
      {
        "kind": "errorNode",
        "name": "metadataMintMismatch",
        "code": 6027,
        "message": "Metadata mint does not match collection mint",
        "docs": [
          "MetadataMintMismatch: Metadata mint does not match collection mint"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidCollectionAuthority",
        "code": 6028,
        "message": "Invalid collection authority",
        "docs": [
          "InvalidCollectionAuthority: Invalid collection authority"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidDelegateRecord",
        "code": 6029,
        "message": "Invalid delegate record pda derivation",
        "docs": [
          "InvalidDelegateRecord: Invalid delegate record pda derivation"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionMasterEditionAccountInvalid",
        "code": 6030,
        "message": "Edition account doesnt match collection",
        "docs": [
          "CollectionMasterEditionAccountInvalid: Edition account doesnt match collection"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionMustBeAUniqueMasterEdition",
        "code": 6031,
        "message": "Collection Must Be a Unique Master Edition v2",
        "docs": [
          "CollectionMustBeAUniqueMasterEdition: Collection Must Be a Unique Master Edition v2"
        ]
      },
      {
        "kind": "errorNode",
        "name": "unknownExternalError",
        "code": 6032,
        "message": "Could not convert external error to BubblegumError",
        "docs": [
          "UnknownExternalError: Could not convert external error to BubblegumError"
        ]
      },
      {
        "kind": "errorNode",
        "name": "decompressionDisabled",
        "code": 6033,
        "message": "Decompression is disabled for this tree.",
        "docs": [
          "DecompressionDisabled: Decompression is disabled for this tree."
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingCollectionMintAccount",
        "code": 6034,
        "message": "Missing collection mint account",
        "docs": [
          "MissingCollectionMintAccount: Missing collection mint account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingCollectionMetadataAccount",
        "code": 6035,
        "message": "Missing collection metadata account",
        "docs": [
          "MissingCollectionMetadataAccount: Missing collection metadata account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionMismatch",
        "code": 6036,
        "message": "Collection mismatch",
        "docs": [
          "CollectionMismatch: Collection mismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "metadataImmutable",
        "code": 6037,
        "message": "Metadata not mutable",
        "docs": [
          "MetadataImmutable: Metadata not mutable"
        ]
      },
      {
        "kind": "errorNode",
        "name": "primarySaleCanOnlyBeFlippedToTrue",
        "code": 6038,
        "message": "Can only update primary sale to true",
        "docs": [
          "PrimarySaleCanOnlyBeFlippedToTrue: Can only update primary sale to true"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorDidNotUnverify",
        "code": 6039,
        "message": "Creator did not unverify the metadata",
        "docs": [
          "CreatorDidNotUnverify: Creator did not unverify the metadata"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidTokenStandard",
        "code": 6040,
        "message": "Only NonFungible standard is supported",
        "docs": [
          "InvalidTokenStandard: Only NonFungible standard is supported"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidCanopySize",
        "code": 6041,
        "message": "Canopy size should be set bigger for this tree",
        "docs": [
          "InvalidCanopySize: Canopy size should be set bigger for this tree"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidLogWrapper",
        "code": 6042,
        "message": "Invalid log wrapper program",
        "docs": [
          "InvalidLogWrapper: Invalid log wrapper program"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidCompressionProgram",
        "code": 6043,
        "message": "Invalid compression program",
        "docs": [
          "InvalidCompressionProgram: Invalid compression program"
        ]
      },
      {
        "kind": "errorNode",
        "name": "leafMustBeDelegated",
        "code": 6044,
        "message": "Leaf must be delegated to someone other than the leaf owner",
        "docs": [
          "LeafMustBeDelegated: Leaf must be delegated to someone other than the leaf owner"
        ]
      },
      {
        "kind": "errorNode",
        "name": "assetIsFrozen",
        "code": 6045,
        "message": "Asset is frozen",
        "docs": [
          "AssetIsFrozen: Asset is frozen"
        ]
      },
      {
        "kind": "errorNode",
        "name": "assetIsNonTransferable",
        "code": 6046,
        "message": "Asset is non-transferable",
        "docs": [
          "AssetIsNonTransferable: Asset is non-transferable"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidAuthority",
        "code": 6047,
        "message": "Invalid authority",
        "docs": [
          "InvalidAuthority: Invalid authority"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionIsFrozen",
        "code": 6048,
        "message": "Collection is frozen",
        "docs": [
          "CollectionIsFrozen: Collection is frozen"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionMustHaveBubblegumPlugin",
        "code": 6049,
        "message": "Core collections must have the Bubblegum V2 plugin on them",
        "docs": [
          "CollectionMustHaveBubblegumPlugin: Core collections must have the Bubblegum V2 plugin on them"
        ]
      },
      {
        "kind": "errorNode",
        "name": "notAvailable",
        "code": 6050,
        "message": "Feature not currently available",
        "docs": [
          "NotAvailable: Feature not currently available"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingCollectionAccount",
        "code": 6051,
        "message": "Missing collection account",
        "docs": [
          "MissingCollectionAccount: Missing collection account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "assetDataLengthTooLong",
        "code": 6052,
        "message": "Asset data length too long",
        "docs": [
          "AssetDataLengthTooLong: Asset data length too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "alreadyInCollection",
        "code": 6053,
        "message": "Item is already in the collection",
        "docs": [
          "AlreadyInCollection: Item is already in the collection"
        ]
      },
      {
        "kind": "errorNode",
        "name": "alreadyNotInCollection",
        "code": 6054,
        "message": "Item is already not in a collection",
        "docs": [
          "AlreadyNotInCollection: Item is already not in a collection"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingMplCoreCpiSignerAccount",
        "code": 6055,
        "message": "Missing mpl-core CPI signer account",
        "docs": [
          "MissingMplCoreCpiSignerAccount: Missing mpl-core CPI signer account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "assetIsNotFrozen",
        "code": 6056,
        "message": "Asset is not frozen",
        "docs": [
          "AssetIsNotFrozen: Asset is not frozen"
        ]
      }
    ]
  },
  "additionalPrograms": []
}